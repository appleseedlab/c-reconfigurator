|- TranslationUnit
   |- ExternalDeclarationList
      |- Declaration
      |  |- DeclaringList
      |  |  |- BasicDeclarationSpecifier
      |  |  |  |- DeclarationQualifierList
      |  |  |  |  |- xtc.lang.cpp.Syntax.Language<TYPEDEF>typedef  
      |  |  |  |- xtc.lang.cpp.Syntax.Language<INT>int  
      |  |  |- SimpleDeclarator
      |  |     |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>gfp_t  
      |  |- xtc.lang.cpp.Syntax.Language<SEMICOLON>;  
      |- Declaration
      |  |- DeclaringList
      |  |  |- xtc.lang.cpp.Syntax.Language<_BOOL>_Bool  
      |  |  |- SimpleDeclarator
      |  |  |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>irqs_disabled  
      |  |  |- InitializerOpt
      |  |     |- xtc.lang.cpp.Syntax.Language<ASSIGN>=  
      |  |     |- Initializer
      |  |        |- xtc.lang.cpp.Syntax.Text<OCTALconstant>0  
      |  |- xtc.lang.cpp.Syntax.Language<SEMICOLON>;  
      |- FunctionDefinition
      |  |- FunctionPrototype
      |  |  |- xtc.lang.cpp.Syntax.Language<VOID>void  
      |  |  |- FunctionDeclarator
      |  |     |- SimpleDeclarator
      |  |     |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>local_irq_disable  
      |  |     |- PostfixingFunctionDeclarator
      |  |        |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |  |        |- ParameterTypeListOpt
      |  |        |  |- ParameterTypeList
      |  |        |     |- ParameterList
      |  |        |        |- ParameterDeclaration
      |  |        |           |- xtc.lang.cpp.Syntax.Language<VOID>void  
      |  |        |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |  |- xtc.lang.cpp.Syntax.Language<LBRACE>{  
      |  |- CompoundStatement
      |  |  |- DeclarationOrStatementList
      |  |     |- ExpressionStatement
      |  |        |- AssignmentExpression
      |  |        |  |- PrimaryIdentifier
      |  |        |  |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>irqs_disabled  
      |  |        |  |- AssignmentOperator
      |  |        |  |  |- xtc.lang.cpp.Syntax.Language<ASSIGN>=  
      |  |        |  |- xtc.lang.cpp.Syntax.Text<INTEGERconstant>1  
      |  |        |- xtc.lang.cpp.Syntax.Language<SEMICOLON>;  
      |  |- xtc.lang.cpp.Syntax.Language<RBRACE>}  
      |- Conditional
      |  |- (defined CONFIG_LOCKDEP) && (defined CONFIG_TRACE_IRQFLAGS) && (defined CONFIG_PROVE_LOCKING)
      |  |- FunctionDefinition
      |     |- FunctionPrototype
      |     |  |- BasicDeclarationSpecifier
      |     |  |  |- DeclarationQualifierList
      |     |  |  |  |- xtc.lang.cpp.Syntax.Language<STATIC>static  
      |     |  |  |- xtc.lang.cpp.Syntax.Language<VOID>void  
      |     |  |- FunctionDeclarator
      |     |     |- SimpleDeclarator
      |     |     |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>__lockdep_trace_alloc  
      |     |     |- PostfixingFunctionDeclarator
      |     |        |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |     |        |- ParameterTypeListOpt
      |     |        |  |- ParameterTypeList
      |     |        |     |- ParameterList
      |     |        |        |- ParameterDeclaration
      |     |        |           |- TypedefTypeSpecifier
      |     |        |           |  |- xtc.lang.cpp.Syntax.Text<TYPEDEFname>gfp_t  
      |     |        |           |- SimpleDeclarator
      |     |        |              |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>gfp_mask  
      |     |        |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |     |- xtc.lang.cpp.Syntax.Language<LBRACE>{  
      |     |- CompoundStatement
      |     |  |- DeclarationOrStatementList
      |     |     |- SelectionStatement
      |     |     |  |- xtc.lang.cpp.Syntax.Language<IF>if  
      |     |     |  |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |     |     |  |- UnaryExpression
      |     |     |  |  |- Unaryoperator
      |     |     |  |  |  |- xtc.lang.cpp.Syntax.Language<NOT>!  
      |     |     |  |  |- PrimaryExpression
      |     |     |  |     |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |     |     |  |     |- AndExpression
      |     |     |  |     |  |- PrimaryIdentifier
      |     |     |  |     |  |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>gfp_mask  
      |     |     |  |     |  |- xtc.lang.cpp.Syntax.Language<AND>&  
      |     |     |  |     |  |- PrimaryExpression
      |     |     |  |     |     |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |     |     |  |     |     |- CastExpression
      |     |     |  |     |     |  |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |     |     |  |     |     |  |- TypeName
      |     |     |  |     |     |  |  |- TypedefTypeSpecifier
      |     |     |  |     |     |  |     |- xtc.lang.cpp.Syntax.Text<TYPEDEFname>gfp_t  
      |     |     |  |     |     |  |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |     |     |  |     |     |  |- xtc.lang.cpp.Syntax.Text<HEXconstant>0x10u  
      |     |     |  |     |     |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |     |     |  |     |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |     |     |  |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |     |     |  |- ReturnStatement
      |     |     |     |- xtc.lang.cpp.Syntax.Language<RETURN>return  
      |     |     |     |- xtc.lang.cpp.Syntax.Language<SEMICOLON>;  
      |     |     |- SelectionStatement
      |     |     |  |- xtc.lang.cpp.Syntax.Language<IF>if  
      |     |     |  |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |     |     |  |- UnaryExpression
      |     |     |  |  |- Unaryoperator
      |     |     |  |  |  |- xtc.lang.cpp.Syntax.Language<NOT>!  
      |     |     |  |  |- PrimaryExpression
      |     |     |  |     |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |     |     |  |     |- AndExpression
      |     |     |  |     |  |- PrimaryIdentifier
      |     |     |  |     |  |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>gfp_mask  
      |     |     |  |     |  |- xtc.lang.cpp.Syntax.Language<AND>&  
      |     |     |  |     |  |- PrimaryExpression
      |     |     |  |     |     |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |     |     |  |     |     |- CastExpression
      |     |     |  |     |     |  |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |     |     |  |     |     |  |- TypeName
      |     |     |  |     |     |  |  |- TypedefTypeSpecifier
      |     |     |  |     |     |  |     |- xtc.lang.cpp.Syntax.Text<TYPEDEFname>gfp_t  
      |     |     |  |     |     |  |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |     |     |  |     |     |  |- xtc.lang.cpp.Syntax.Text<HEXconstant>0x80u  
      |     |     |  |     |     |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |     |     |  |     |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |     |     |  |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |     |     |  |- ReturnStatement
      |     |     |     |- xtc.lang.cpp.Syntax.Language<RETURN>return  
      |     |     |     |- xtc.lang.cpp.Syntax.Language<SEMICOLON>;  
      |     |     |- ExpressionStatement
      |     |        |- FunctionCall
      |     |        |  |- PrimaryIdentifier
      |     |        |  |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>assert  
      |     |        |  |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |     |        |  |- ExpressionList
      |     |        |  |  |- UnaryExpression
      |     |        |  |     |- Unaryoperator
      |     |        |  |     |  |- xtc.lang.cpp.Syntax.Language<NOT>!  
      |     |        |  |     |- PrimaryIdentifier
      |     |        |  |        |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>irqs_disabled  
      |     |        |  |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |     |        |- xtc.lang.cpp.Syntax.Language<SEMICOLON>;  
      |     |- xtc.lang.cpp.Syntax.Language<RBRACE>}  
      |- Conditional
      |  |- (defined CONFIG_LOCKDEP) && (defined CONFIG_TRACE_IRQFLAGS) && (defined CONFIG_PROVE_LOCKING)
      |  |- FunctionDefinition
      |     |- FunctionPrototype
      |     |  |- xtc.lang.cpp.Syntax.Language<VOID>void  
      |     |  |- FunctionDeclarator
      |     |     |- SimpleDeclarator
      |     |     |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>lockdep_trace_alloc  
      |     |     |- PostfixingFunctionDeclarator
      |     |        |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |     |        |- ParameterTypeListOpt
      |     |        |  |- ParameterTypeList
      |     |        |     |- ParameterList
      |     |        |        |- ParameterDeclaration
      |     |        |           |- TypedefTypeSpecifier
      |     |        |           |  |- xtc.lang.cpp.Syntax.Text<TYPEDEFname>gfp_t  
      |     |        |           |- SimpleDeclarator
      |     |        |              |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>gfp_mask  
      |     |        |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |     |- xtc.lang.cpp.Syntax.Language<LBRACE>{  
      |     |- CompoundStatement
      |     |  |- DeclarationOrStatementList
      |     |     |- ExpressionStatement
      |     |        |- FunctionCall
      |     |        |  |- PrimaryIdentifier
      |     |        |  |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>__lockdep_trace_alloc  
      |     |        |  |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |     |        |  |- ExpressionList
      |     |        |  |  |- PrimaryIdentifier
      |     |        |  |     |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>gfp_mask  
      |     |        |  |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |     |        |- xtc.lang.cpp.Syntax.Language<SEMICOLON>;  
      |     |- xtc.lang.cpp.Syntax.Language<RBRACE>}  
      |- Conditional
      |  |- !(defined CONFIG_LOCKDEP) || (defined CONFIG_LOCKDEP) && !(defined CONFIG_TRACE_IRQFLAGS) || (defined CONFIG_LOCKDEP) && (defined CONFIG_TRACE_IRQFLAGS) && !(defined CONFIG_PROVE_LOCKING)
      |  |- FunctionDefinition
      |     |- FunctionPrototype
      |     |  |- xtc.lang.cpp.Syntax.Language<VOID>void  
      |     |  |- FunctionDeclarator
      |     |     |- SimpleDeclarator
      |     |     |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>lockdep_trace_alloc  
      |     |     |- PostfixingFunctionDeclarator
      |     |        |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |     |        |- ParameterTypeListOpt
      |     |        |  |- ParameterTypeList
      |     |        |     |- ParameterList
      |     |        |        |- ParameterDeclaration
      |     |        |           |- TypedefTypeSpecifier
      |     |        |           |  |- xtc.lang.cpp.Syntax.Text<TYPEDEFname>gfp_t  
      |     |        |           |- SimpleDeclarator
      |     |        |              |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>gfp_mask  
      |     |        |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |     |- xtc.lang.cpp.Syntax.Language<LBRACE>{  
      |     |- CompoundStatement
      |     |  |- DeclarationOrStatementList
      |     |- xtc.lang.cpp.Syntax.Language<RBRACE>}  
      |- Conditional
      |  |- (defined CONFIG_SLAB) && (defined CONFIG_NUMA)
      |  |- FunctionDefinition
      |     |- FunctionPrototype
      |     |  |- xtc.lang.cpp.Syntax.Language<VOID>void  
      |     |  |- FunctionDeclarator
      |     |     |- SimpleDeclarator
      |     |     |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>__cache_alloc_node  
      |     |     |- PostfixingFunctionDeclarator
      |     |        |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |     |        |- ParameterTypeListOpt
      |     |        |  |- ParameterTypeList
      |     |        |     |- ParameterList
      |     |        |        |- ParameterDeclaration
      |     |        |           |- TypedefTypeSpecifier
      |     |        |           |  |- xtc.lang.cpp.Syntax.Text<TYPEDEFname>gfp_t  
      |     |        |           |- SimpleDeclarator
      |     |        |              |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>flags  
      |     |        |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |     |- xtc.lang.cpp.Syntax.Language<LBRACE>{  
      |     |- CompoundStatement
      |     |  |- DeclarationOrStatementList
      |     |     |- ExpressionStatement
      |     |        |- FunctionCall
      |     |        |  |- PrimaryIdentifier
      |     |        |  |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>lockdep_trace_alloc  
      |     |        |  |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |     |        |  |- ExpressionList
      |     |        |  |  |- PrimaryIdentifier
      |     |        |  |     |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>flags  
      |     |        |  |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |     |        |- xtc.lang.cpp.Syntax.Language<SEMICOLON>;  
      |     |- xtc.lang.cpp.Syntax.Language<RBRACE>}  
      |- Conditional
      |  |- (defined CONFIG_SLAB) && (defined CONFIG_NUMA)
      |  |- FunctionDefinition
      |     |- FunctionPrototype
      |     |  |- xtc.lang.cpp.Syntax.Language<VOID>void  
      |     |  |- FunctionDeclarator
      |     |     |- SimpleDeclarator
      |     |     |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>kmem_cache_alloc_node  
      |     |     |- PostfixingFunctionDeclarator
      |     |        |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |     |        |- ParameterTypeListOpt
      |     |        |  |- ParameterTypeList
      |     |        |     |- ParameterList
      |     |        |        |- ParameterDeclaration
      |     |        |           |- TypedefTypeSpecifier
      |     |        |           |  |- xtc.lang.cpp.Syntax.Text<TYPEDEFname>gfp_t  
      |     |        |           |- SimpleDeclarator
      |     |        |              |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>flags  
      |     |        |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |     |- xtc.lang.cpp.Syntax.Language<LBRACE>{  
      |     |- CompoundStatement
      |     |  |- DeclarationOrStatementList
      |     |     |- ExpressionStatement
      |     |        |- FunctionCall
      |     |        |  |- PrimaryIdentifier
      |     |        |  |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>__cache_alloc_node  
      |     |        |  |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |     |        |  |- ExpressionList
      |     |        |  |  |- PrimaryIdentifier
      |     |        |  |     |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>flags  
      |     |        |  |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |     |        |- xtc.lang.cpp.Syntax.Language<SEMICOLON>;  
      |     |- xtc.lang.cpp.Syntax.Language<RBRACE>}  
      |- Conditional
      |  |- (defined CONFIG_SLAB) && (defined CONFIG_NUMA) && (defined CONFIG_KMEMTRACE)
      |  |- FunctionDefinition
      |     |- FunctionPrototype
      |     |  |- xtc.lang.cpp.Syntax.Language<VOID>void  
      |     |  |- FunctionDeclarator
      |     |     |- SimpleDeclarator
      |     |     |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>kmem_cache_alloc_node_notrace  
      |     |     |- PostfixingFunctionDeclarator
      |     |        |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |     |        |- ParameterTypeListOpt
      |     |        |  |- ParameterTypeList
      |     |        |     |- ParameterList
      |     |        |        |- ParameterDeclaration
      |     |        |           |- TypedefTypeSpecifier
      |     |        |           |  |- xtc.lang.cpp.Syntax.Text<TYPEDEFname>gfp_t  
      |     |        |           |- SimpleDeclarator
      |     |        |              |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>flags  
      |     |        |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |     |- xtc.lang.cpp.Syntax.Language<LBRACE>{  
      |     |- CompoundStatement
      |     |  |- DeclarationOrStatementList
      |     |     |- ExpressionStatement
      |     |        |- FunctionCall
      |     |        |  |- PrimaryIdentifier
      |     |        |  |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>__cache_alloc_node  
      |     |        |  |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |     |        |  |- ExpressionList
      |     |        |  |  |- PrimaryIdentifier
      |     |        |  |     |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>flags  
      |     |        |  |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |     |        |- xtc.lang.cpp.Syntax.Language<SEMICOLON>;  
      |     |- xtc.lang.cpp.Syntax.Language<RBRACE>}  
      |- Conditional
      |  |- (defined CONFIG_SLAB) && (defined CONFIG_NUMA) && !(defined CONFIG_KMEMTRACE)
      |  |- FunctionDefinition
      |     |- FunctionPrototype
      |     |  |- xtc.lang.cpp.Syntax.Language<VOID>void  
      |     |  |- FunctionDeclarator
      |     |     |- SimpleDeclarator
      |     |     |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>kmem_cache_alloc_node_notrace  
      |     |     |- PostfixingFunctionDeclarator
      |     |        |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |     |        |- ParameterTypeListOpt
      |     |        |  |- ParameterTypeList
      |     |        |     |- ParameterList
      |     |        |        |- ParameterDeclaration
      |     |        |           |- TypedefTypeSpecifier
      |     |        |           |  |- xtc.lang.cpp.Syntax.Text<TYPEDEFname>gfp_t  
      |     |        |           |- SimpleDeclarator
      |     |        |              |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>flags  
      |     |        |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |     |- xtc.lang.cpp.Syntax.Language<LBRACE>{  
      |     |- CompoundStatement
      |     |  |- DeclarationOrStatementList
      |     |     |- ExpressionStatement
      |     |        |- FunctionCall
      |     |        |  |- PrimaryIdentifier
      |     |        |  |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>kmem_cache_alloc_node  
      |     |        |  |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |     |        |  |- ExpressionList
      |     |        |  |  |- PrimaryIdentifier
      |     |        |  |     |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>flags  
      |     |        |  |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |     |        |- xtc.lang.cpp.Syntax.Language<SEMICOLON>;  
      |     |- xtc.lang.cpp.Syntax.Language<RBRACE>}  
      |- Conditional
      |  |- (defined CONFIG_SLAB) && (defined CONFIG_NUMA)
      |  |- FunctionDefinition
      |     |- FunctionPrototype
      |     |  |- BasicDeclarationSpecifier
      |     |  |  |- DeclarationQualifierList
      |     |  |  |  |- xtc.lang.cpp.Syntax.Language<STATIC>static  
      |     |  |  |- xtc.lang.cpp.Syntax.Language<VOID>void  
      |     |  |- FunctionDeclarator
      |     |     |- SimpleDeclarator
      |     |     |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>kmalloc_node  
      |     |     |- PostfixingFunctionDeclarator
      |     |        |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |     |        |- ParameterTypeListOpt
      |     |        |  |- ParameterTypeList
      |     |        |     |- ParameterList
      |     |        |        |- ParameterDeclaration
      |     |        |           |- TypedefTypeSpecifier
      |     |        |           |  |- xtc.lang.cpp.Syntax.Text<TYPEDEFname>gfp_t  
      |     |        |           |- SimpleDeclarator
      |     |        |              |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>gfp_mask  
      |     |        |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |     |- xtc.lang.cpp.Syntax.Language<LBRACE>{  
      |     |- CompoundStatement
      |     |  |- DeclarationOrStatementList
      |     |     |- ExpressionStatement
      |     |        |- FunctionCall
      |     |        |  |- PrimaryIdentifier
      |     |        |  |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>kmem_cache_alloc_node_notrace  
      |     |        |  |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |     |        |  |- ExpressionList
      |     |        |  |  |- PrimaryIdentifier
      |     |        |  |     |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>gfp_mask  
      |     |        |  |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |     |        |- xtc.lang.cpp.Syntax.Language<SEMICOLON>;  
      |     |- xtc.lang.cpp.Syntax.Language<RBRACE>}  
      |- Conditional
      |  |- (defined CONFIG_SLAB) && !(defined CONFIG_NUMA)
      |  |- FunctionDefinition
      |     |- FunctionPrototype
      |     |  |- xtc.lang.cpp.Syntax.Language<VOID>void  
      |     |  |- FunctionDeclarator
      |     |     |- SimpleDeclarator
      |     |     |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>kmalloc_node  
      |     |     |- PostfixingFunctionDeclarator
      |     |        |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |     |        |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |     |- xtc.lang.cpp.Syntax.Language<LBRACE>{  
      |     |- CompoundStatement
      |     |  |- DeclarationOrStatementList
      |     |     |- ReturnStatement
      |     |        |- xtc.lang.cpp.Syntax.Language<RETURN>return  
      |     |        |- xtc.lang.cpp.Syntax.Language<SEMICOLON>;  
      |     |- xtc.lang.cpp.Syntax.Language<RBRACE>}  
      |- Conditional
      |  |- (defined CONFIG_SLAB)
      |  |- FunctionDefinition
      |     |- FunctionPrototype
      |     |  |- BasicDeclarationSpecifier
      |     |  |  |- DeclarationQualifierList
      |     |  |  |  |- xtc.lang.cpp.Syntax.Language<STATIC>static  
      |     |  |  |- xtc.lang.cpp.Syntax.Language<INT>int  
      |     |  |- FunctionDeclarator
      |     |     |- SimpleDeclarator
      |     |     |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>setup_cpu_cache  
      |     |     |- PostfixingFunctionDeclarator
      |     |        |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |     |        |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |     |- xtc.lang.cpp.Syntax.Language<LBRACE>{  
      |     |- CompoundStatement
      |     |  |- DeclarationOrStatementList
      |     |     |- ExpressionStatement
      |     |        |- FunctionCall
      |     |        |  |- PrimaryIdentifier
      |     |        |  |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>kmalloc_node  
      |     |        |  |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |     |        |  |- ExpressionList
      |     |        |  |  |- PrimaryExpression
      |     |        |  |     |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |     |        |  |     |- InclusiveOrExpression
      |     |        |  |     |  |- InclusiveOrExpression
      |     |        |  |     |  |  |- PrimaryExpression
      |     |        |  |     |  |  |  |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |     |        |  |     |  |  |  |- CastExpression
      |     |        |  |     |  |  |  |  |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |     |        |  |     |  |  |  |  |- TypeName
      |     |        |  |     |  |  |  |  |  |- TypedefTypeSpecifier
      |     |        |  |     |  |  |  |  |     |- xtc.lang.cpp.Syntax.Text<TYPEDEFname>gfp_t  
      |     |        |  |     |  |  |  |  |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |     |        |  |     |  |  |  |  |- xtc.lang.cpp.Syntax.Text<HEXconstant>0x10u  
      |     |        |  |     |  |  |  |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |     |        |  |     |  |  |- xtc.lang.cpp.Syntax.Language<PIPE>|  
      |     |        |  |     |  |  |- PrimaryExpression
      |     |        |  |     |  |     |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |     |        |  |     |  |     |- CastExpression
      |     |        |  |     |  |     |  |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |     |        |  |     |  |     |  |- TypeName
      |     |        |  |     |  |     |  |  |- TypedefTypeSpecifier
      |     |        |  |     |  |     |  |     |- xtc.lang.cpp.Syntax.Text<TYPEDEFname>gfp_t  
      |     |        |  |     |  |     |  |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |     |        |  |     |  |     |  |- xtc.lang.cpp.Syntax.Text<HEXconstant>0x40u  
      |     |        |  |     |  |     |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |     |        |  |     |  |- xtc.lang.cpp.Syntax.Language<PIPE>|  
      |     |        |  |     |  |- PrimaryExpression
      |     |        |  |     |     |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |     |        |  |     |     |- CastExpression
      |     |        |  |     |     |  |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |     |        |  |     |     |  |- TypeName
      |     |        |  |     |     |  |  |- TypedefTypeSpecifier
      |     |        |  |     |     |  |     |- xtc.lang.cpp.Syntax.Text<TYPEDEFname>gfp_t  
      |     |        |  |     |     |  |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |     |        |  |     |     |  |- xtc.lang.cpp.Syntax.Text<HEXconstant>0x80u  
      |     |        |  |     |     |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |     |        |  |     |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |     |        |  |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |     |        |- xtc.lang.cpp.Syntax.Language<SEMICOLON>;  
      |     |- xtc.lang.cpp.Syntax.Language<RBRACE>}  
      |- Conditional
      |  |- (defined CONFIG_SLAB)
      |  |- FunctionDefinition
      |     |- FunctionPrototype
      |     |  |- xtc.lang.cpp.Syntax.Language<VOID>void  
      |     |  |- FunctionDeclarator
      |     |     |- SimpleDeclarator
      |     |     |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>kmem_cache_create  
      |     |     |- PostfixingFunctionDeclarator
      |     |        |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |     |        |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |     |- xtc.lang.cpp.Syntax.Language<LBRACE>{  
      |     |- CompoundStatement
      |     |  |- DeclarationOrStatementList
      |     |     |- ExpressionStatement
      |     |        |- FunctionCall
      |     |        |  |- PrimaryIdentifier
      |     |        |  |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>setup_cpu_cache  
      |     |        |  |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |     |        |  |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |     |        |- xtc.lang.cpp.Syntax.Language<SEMICOLON>;  
      |     |- xtc.lang.cpp.Syntax.Language<RBRACE>}  
      |- Conditional
      |  |- (defined CONFIG_SLAB)
      |  |- FunctionDefinition
      |     |- FunctionPrototype
      |     |  |- xtc.lang.cpp.Syntax.Language<VOID>void  
      |     |  |- FunctionDeclarator
      |     |     |- SimpleDeclarator
      |     |     |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>kmem_cache_init  
      |     |     |- PostfixingFunctionDeclarator
      |     |        |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |     |        |- ParameterTypeListOpt
      |     |        |  |- ParameterTypeList
      |     |        |     |- ParameterList
      |     |        |        |- ParameterDeclaration
      |     |        |           |- xtc.lang.cpp.Syntax.Language<VOID>void  
      |     |        |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |     |- xtc.lang.cpp.Syntax.Language<LBRACE>{  
      |     |- CompoundStatement
      |     |  |- DeclarationOrStatementList
      |     |     |- ExpressionStatement
      |     |        |- FunctionCall
      |     |        |  |- PrimaryIdentifier
      |     |        |  |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>kmem_cache_create  
      |     |        |  |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |     |        |  |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |     |        |- xtc.lang.cpp.Syntax.Language<SEMICOLON>;  
      |     |- xtc.lang.cpp.Syntax.Language<RBRACE>}  
      |- Conditional
      |  |- !(defined CONFIG_SLAB)
      |  |- FunctionDefinition
      |     |- FunctionPrototype
      |     |  |- xtc.lang.cpp.Syntax.Language<VOID>void  
      |     |  |- FunctionDeclarator
      |     |     |- SimpleDeclarator
      |     |     |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>kmem_cache_init  
      |     |     |- PostfixingFunctionDeclarator
      |     |        |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |     |        |- ParameterTypeListOpt
      |     |        |  |- ParameterTypeList
      |     |        |     |- ParameterList
      |     |        |        |- ParameterDeclaration
      |     |        |           |- xtc.lang.cpp.Syntax.Language<VOID>void  
      |     |        |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |     |- xtc.lang.cpp.Syntax.Language<LBRACE>{  
      |     |- CompoundStatement
      |     |  |- DeclarationOrStatementList
      |     |- xtc.lang.cpp.Syntax.Language<RBRACE>}  
      |- FunctionDefinition
      |  |- FunctionPrototype
      |  |  |- BasicDeclarationSpecifier
      |  |  |  |- DeclarationQualifierList
      |  |  |  |  |- xtc.lang.cpp.Syntax.Language<STATIC>static  
      |  |  |  |- xtc.lang.cpp.Syntax.Language<VOID>void  
      |  |  |- FunctionDeclarator
      |  |     |- SimpleDeclarator
      |  |     |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>mm_init  
      |  |     |- PostfixingFunctionDeclarator
      |  |        |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |  |        |- ParameterTypeListOpt
      |  |        |  |- ParameterTypeList
      |  |        |     |- ParameterList
      |  |        |        |- ParameterDeclaration
      |  |        |           |- xtc.lang.cpp.Syntax.Language<VOID>void  
      |  |        |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |  |- xtc.lang.cpp.Syntax.Language<LBRACE>{  
      |  |- CompoundStatement
      |  |  |- DeclarationOrStatementList
      |  |     |- ExpressionStatement
      |  |        |- FunctionCall
      |  |        |  |- PrimaryIdentifier
      |  |        |  |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>kmem_cache_init  
      |  |        |  |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |  |        |  |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |  |        |- xtc.lang.cpp.Syntax.Language<SEMICOLON>;  
      |  |- xtc.lang.cpp.Syntax.Language<RBRACE>}  
      |- FunctionDefinition
         |- FunctionPrototype
         |  |- xtc.lang.cpp.Syntax.Language<INT>int  
         |  |- FunctionDeclarator
         |     |- SimpleDeclarator
         |     |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>main  
         |     |- PostfixingFunctionDeclarator
         |        |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
         |        |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
         |- xtc.lang.cpp.Syntax.Language<LBRACE>{  
         |- CompoundStatement
         |  |- DeclarationOrStatementList
         |     |- ExpressionStatement
         |     |  |- FunctionCall
         |     |  |  |- PrimaryIdentifier
         |     |  |  |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>local_irq_disable  
         |     |  |  |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
         |     |  |  |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
         |     |  |- xtc.lang.cpp.Syntax.Language<SEMICOLON>;  
         |     |- ExpressionStatement
         |     |  |- FunctionCall
         |     |  |  |- PrimaryIdentifier
         |     |  |  |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>mm_init  
         |     |  |  |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
         |     |  |  |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
         |     |  |- xtc.lang.cpp.Syntax.Language<SEMICOLON>;  
         |     |- ReturnStatement
         |        |- xtc.lang.cpp.Syntax.Language<RETURN>return  
         |        |- PrimaryExpression
         |        |  |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
         |        |  |- ConditionalExpression
         |        |  |  |- PrimaryIdentifier
         |        |  |  |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>_recon_smth  
         |        |  |  |- xtc.lang.cpp.Syntax.Language<QUESTION>?  
         |        |  |  |- xtc.lang.cpp.Syntax.Text<INTEGERconstant>1  
         |        |  |  |- xtc.lang.cpp.Syntax.Language<COLON>:  
         |        |  |  |- xtc.lang.cpp.Syntax.Text<OCTALconstant>0  
         |        |  |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
         |        |- xtc.lang.cpp.Syntax.Language<SEMICOLON>;  
         |- xtc.lang.cpp.Syntax.Language<RBRACE>}  
